@page "/lista"
@inject HttpClient Http

<h1>Lista de libros disponibles</h1>

<p>Algunos libros son largos, otros cortos… y son perfectos para descargar o leer en línea, como lo prefieras.</p>

@if (libros == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th class="text-center text-uppercase">Título</th>
                <th>Autor</th>
                <th>Año de Publicación</th>
                <th>Detalles</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var libro in infoLibros)
            {
            <tr>
                <td>@libro.Titulo</td>
                <td>@libro.Autor</td>
                <td>@libro.AnioPublicacion</td>
                <td><a href="detalle/@libro.Id">Ver información <span style="color:black" class="oi oi-external-link" aria-hidden="true"></span></a></td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private ListaLibros[] libros;

    private Info[] libro;

    private List<Info> infoLibros = new List<Info>();

    protected override async Task OnInitializedAsync()
    {
        libros = await Http.GetFromJsonAsync<ListaLibros[]>("sample-data/listaLibrosid.json");

        foreach (var id in libros)
        {
            libro = await Http.GetFromJsonAsync<Info[]>("sample-data/listaDetalleLibros" + id.Id + ".json");
            infoLibros.Add(libro[0]);
        }
    }

    public class ListaLibros
    {
        public string Id { get; set; }
    }

    public class Info
    {
        public string Titulo { get; set; }

        public string Autor { get; set; }

        public string AnioPublicacion { get; set; }

        public string Id { get; set; }
    }
}
